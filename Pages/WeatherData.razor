@page "/WeatherData"

@inject IHttpClientFactory _clientFactory


<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <h3>Version1 Weather Data</h3>
    <p>All weather data drawn from <a href="https://www.metaweather.com/">MetaWeather</a>. We are grateful to them for the open access to their API for this demonstration.</p>


    @if (string.IsNullOrWhiteSpace(errorString) == false)
    {
        <div class="h2">@errorString</div>
    }
    else if (forecast is null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {
<MudPaper Class="pa-16 ma-2" Outlined="true">
    <h2>City: @forecast.title</h2>
    <h4>Timezone: @forecast.timezone</h4>
    <MudSimpleTable Dense="false" Hover="true" Bordered="true" Striped="true" Style="overflow-x: auto;">
        <thead class="thead-dark">
            <tr>
                <th>Date</th>
                <th>Weather State</th>
                <th>Low</th>
                <th>High</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var w in forecast.consolidated_weather)
            {
                <tr>
                    <td>@w.applicable_date</td>
                    <td>@w.weather_state_name</td>
                    <td>@w.min_temp</td>
                    <td>@w.max_temp</td>
                </tr>
            }


        </tbody>
    </MudSimpleTable>
    </MudPaper>
    }
</MudContainer>

    @code {
        // https://www.youtube.com/watch?v=cwgck1k0YKU
        // commented out version uses long hand version of the request process
        // other version is the short version

        WeatherForeCastModel forecast; // Instantiate the class... but don't initialise it yet...
        string errorString;

        string city = RandomCity.getCity();

        protected override async Task OnInitializedAsync()
        {


            var client = _clientFactory.CreateClient("meta");

            try
            {
                forecast = await client.GetFromJsonAsync<WeatherForeCastModel>(city);
                errorString = null;
            }
            catch (Exception ex)
            {
                errorString = $"There was an error getting the weather data: {ex.Message}";
            }


        }

    }
